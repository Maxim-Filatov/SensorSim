name: Continuous Delivery

on:
  push:
    branches:
      - main
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  ORGANIZATION: SocketSomeone

jobs:
  build-and-push-image:
    name: Publish Docker image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      max-parallel: 4
      fail-fast: true
      matrix:
        service: [API]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3.3.1
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
            
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/SocketSomeone/${{ matrix.service }}:${{ steps.environment.outputs.name }}, ${{ env.REGISTRY }}/SocketSomeone/${{ matrix.service }}:latest

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./SensorSim.${{ matrix.service }}/Dockerfile
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          tags: ${{ steps.meta.outputs.tags }}, ${{ env.REGISTRY }}/SocketSomeone/SensorSim/${{ matrix.service }}:${{ steps.environment.outputs.name }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          target: ${{ steps.environment.outputs.name }}